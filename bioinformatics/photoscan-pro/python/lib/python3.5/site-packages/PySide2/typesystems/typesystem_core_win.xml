<?xml version="1.0"?>
<!--
    This file is part of PySide project.
    Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
    Contact: PySide team <contact@pyside.org>

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
-->
<typesystem package="PySide2.QtCore">
  <extra-includes>
    <include file-name="windows.h" location="global"/>
  </extra-includes>
  <primitive-type name="Qt::HANDLE" target-lang-api-name="PyObject" />
  <primitive-type name="HWND">
      <!-- Qt5: Add this include there to insert ti in the global qtcore header (needed by qprocess_wrapper) -->
      <include file-name="wtypes.h" location="global"/>
      <conversion-rule>
        <native-to-target>
        #ifdef IS_PY3K
        return PyCapsule_New(%in, 0, 0);
        #else
        return PyCObject_FromVoidPtr(%in, 0);
        #endif
        </native-to-target>
        <target-to-native>
            <add-conversion type="PyNone">
            %out = 0;
            </add-conversion>
            <add-conversion check="checkPyCapsuleOrPyCObject(%in)" type="PyObject">
            #ifdef IS_PY3K
            %out = (%OUTTYPE)PyCapsule_GetPointer(%in, 0);
            #else
            %out = (%OUTTYPE)PyCObject_AsVoidPtr(%in);
            #endif
            </add-conversion>
        </target-to-native>
      </conversion-rule>
  </primitive-type>
  <inject-code class="native" position="beginning">
    <insert-template name="checkPyCapsuleOrPyCObject_func"/>
  </inject-code>

  <!-- Qt5: had to move QAbstractEventDispatcher into os-specific files because of Windows -->
  <object-type name="QWinEventNotifier" />
  <object-type name="QAbstractEventDispatcher">
    <modify-function signature="processEvents(QFlags&lt;QEventLoop::ProcessEventsFlag>)" allow-thread="yes"/>
    <!-- Qt5: had to add this recursive object def. This was crucial to get rid of "pure virtual" -->
    <object-type name="TimerInfo"/>
  </object-type>
  <object-type name="QSysInfo">
    <enum-type name="Endian"/>
    <enum-type name="Sizes"/>
    <enum-type name="WinVersion" since="5.5" />
  </object-type>
  <suppress-warning text="enum 'QSysInfo::MacVersion' does not have a type entry or is not an enum" />
</typesystem>
